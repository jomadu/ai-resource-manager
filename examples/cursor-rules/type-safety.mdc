---
description: Type Safety rules from Test Guidelines
globs: "*"
alwaysApply: false
---

# Type Safety

Rules converted from test-guidelines.md

## 💡 Use strict type checking in tsconfig.json

**Details:**
- Priority: medium
- Tags: type


## 💡 Prefer interfaces over types for object shapes

**Details:**
- Priority: medium
- Tags: type, interface


## 💡 Avoid any type, use unknown instead

**Details:**
- Priority: medium
- Tags: type


## ⚠️ Always handle promise rejections

**Details:**
- Priority: high
- Tags: promise

**Examples:**

✅ **Recommended:**
```typescript
// Good example
interface User {
name: string;
email: string;
}
function getUser(): Promise<User> {
return fetch('/api/user').then(res => res.json());
}
```

❌ **Avoid:**
```typescript
// Bad example
function getUser(): any {
return fetch('/api/user').then(res => res.json());
}
```


---
*Generated by ARM (AI Rules Manager)*
